<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" media="all" href="/static/auth.css">
    <script src="/static/util.js"></script>

    <title>Events</title>

</head>
<body>

<header>
    <h1 class="event">Events</h1>
    <button onclick="openCreateDialog()">+</button>
</header>

<main class="events">
    {{if .Events}}
        <h3>Current</h3>
        <ul>
            {{range .Events}}
                <li class="flex">
                    <a href="/events/{{.Id}}"><strong>{{.Title}}</strong></a>
                    <button onclick="openEditDialog('{{.Id}}')">Edit</button>
                </li>
            {{end}}
        </ul>
    {{end}}
    {{if .PastEvents}}
        <h3>Past</h3>
        <ul>
            {{range .PastEvents}}
                <li>
                    <a href="/events/{{.Id}}"><strong>{{.Title}}</strong></a>
                </li>
            {{end}}
        </ul>
    {{end}}
</main>

<dialog id="dialog">
    <h2>Event</h2>
    <button class="close" onclick="closeDialog()">Ã—</button>
    <form method="dialog">
        <p>
            <label for="title">Title</label>
            <input id="title" type="text" maxlength="50" required/>
        </p>
        <div>
            <p>
                <label for="startDate">Start</label>
                <input id="startDate" type="date" required/>
                <input id="startTime" type="time" required/>
            </p>
            <p>
                <label for="endDate">End</label>
                <input id="endDate" type="date" required/>
                <input id="endTime" type="time" required/>
            </p>
        </div>
        <p>
            <label for="locationName">Location</label>
            <input id="locationName" type="text" maxlength="50" placeholder="Bitcoin coffee" required/>
            <input id="locationUrl" type="url" maxlength="100" placeholder="https://mapy.cz/s/gocovurafo" required/>
        </p>
        <p>
            <label for="capacity">Capacity</label>
            <input id="capacity" type="number" min="1" max="1000" required/>
        </p>
        <p>
            <label for="description">Description</label>
            <textarea id="description" rows="5" maxlength="500" required></textarea>
        </p>
        <div class="buttons">
            <button>Submit</button>
        </div>
    </form>
</dialog>

<script>
    const dialogElement = element('dialog');
    const titleElement = element('title')
    const startDateElement = element('startDate')
    const startTimeElement = element('startTime')
    const endDateElement = element('endDate')
    const endTimeElement = element('endTime')
    const locationNameElement = element('locationName')
    const locationUrlElement = element('locationUrl')
    const capacityElement = element('capacity')
    const descriptionElement = element('description')

    function openCreateDialog() {
        titleElement.value = ''
        startDateElement.value = ''
        startTimeElement.value = ''
        endDateElement.value = ''
        endTimeElement.value = ''
        locationNameElement.value = ''
        locationUrlElement.value = ''
        capacityElement.value = ''
        descriptionElement.value = ''
        dialogElement.onsubmit = () => submitEvent(post, '/api/events')
        dialogElement.showModal()
    }

    function openEditDialog(eventId) {
        const eventUri = `/api/events/${eventId}`;
        fetch(eventUri)
            .then(response => response.json())
            .then(body => {
                const start = new Date(body.start);
                const end = new Date(body.end);
                titleElement.value = body.title
                startDateElement.value = toLocalDate(start)
                startTimeElement.value = toLocalTime(start)
                endDateElement.value = toLocalDate(end)
                endTimeElement.value = toLocalTime(end)
                locationNameElement.value = body.location.name
                locationUrlElement.value = body.location.url
                capacityElement.value = body.capacity
                descriptionElement.value = body.description
                dialogElement.onsubmit = () => submitEvent(put, eventUri)
                dialogElement.showModal()
            })
    }

    function submitEvent(submitFunction, uri) {
        let start = toIsoDateTime(startDateElement.value, startTimeElement.value);
        let end = toIsoDateTime(endDateElement.value, endTimeElement.value);
        if (end <= start) {
            alert('Event ends earlier than it starts!')
            return false
        }
        submitFunction(uri, {
            title: titleElement.value,
            start: start,
            end: end,
            location: toLocation(locationNameElement.value, locationUrlElement.value),
            capacity: Number(capacityElement.value),
            description: descriptionElement.value
        }).then(() => document.location.reload())
    }

    function closeDialog() {
        dialogElement.close()
    }

    function toLocalDate(date) {
        const year = toComponent(date.getFullYear(), 4);
        const month = toComponent(date.getMonth() + 1);
        const day = toComponent(date.getDate());
        return `${year}-${month}-${day}`
    }

    function toLocalTime(date) {
        const hours = toComponent(date.getHours());
        const minutes = toComponent(date.getMinutes());
        return `${hours}:${minutes}`
    }

    function toComponent(value, width = 2) {
        return value.toString().padStart(width, '0')
    }

    function toIsoDateTime(localDate, localTime) {
        return new Date(`${localDate}T${localTime}:00`).toISOString()
    }

    function toLocation(name, url) {
        return { name, url }
    }
</script>

</body>
</html>
