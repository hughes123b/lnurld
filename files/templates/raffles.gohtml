<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" media="all" href="/static/auth.css">
    <script src="/static/utils.js"></script>

    <title>Raffles</title>

</head>
<body>

<header>
    <h1 class="raffle">Raffles</h1>
    <button onclick="openCreateDialog()">+</button>
</header>

{{define "raffle"}}
    <a href="/auth/raffles/{{.Id}}">
        <div>
            <p><strong>{{.Title}}</strong></p>
            <p class="subdued">
                <span>{{number .TicketPrice "sat"}} / ticket</span> •
                <span>{{number .PrizesCount "prize"}}</span>
            </p>
            {{if not .IsMine}}
                <small>by <strong>{{.Owner}}</strong></small>
            {{end}}
        </div>
    </a>
{{end}}

<main class="raffles">
    {{if .Raffles}}
        <h3>Open</h3>
        <ul>
            {{range .Raffles}}
                <li>
                    {{template "raffle" .}}
                    <button onclick="openEditDialog('{{.Id}}')">✎</button>
                </li>
            {{end}}
        </ul>
    {{end}}
    {{if .DrawnRaffles}}
        <h3>Drawn</h3>
        <ul>
            {{range .DrawnRaffles}}
                <li>{{template "raffle" .}}</li>
            {{end}}
        </ul>
    {{end}}
    {{if and (not .Raffles) (not .DrawnRaffles)}}
        <footer>No raffles to show.</footer>
    {{end}}
</main>

<dialog id="dialog">
    <h2>Raffle</h2>
    <button class="close" onclick="closeDialog()">×</button>
    <form method="dialog">
        <div>
            <label for="title">Title</label>
            <input id="title" type="text" maxlength="50" required>
        </div>
        <div>
            <label for="ticket-price">Ticket Price (sats)</label>
            <div class="row">
                <input id="ticket-price" type="number" min="1" max="1000000" oninput="updateFiatAmount()" required>
                <span>≈</span>
                <input id="fiat-amount" type="number" min="1" max="1000000" readonly>
            </div>
        </div>
        <div>
            <label for="fiat-currency">Fiat Currency</label>
            <select id="fiat-currency" oninput="updateFiatAmount()" required>
                <option value="" disabled> </option>
                {{range .FiatCurrencies}}
                    <option value="{{.}}">{{currencyCode .}}</option>
                {{end}}
            </select>
        </div>
        <div>
            <div class="row">
                <label for="prizes">Prizes (the first one drawn last)</label>
                <button id="add-prize" onclick="addPrize(); return false">+</button>
            </div>
            <textarea id="prizes" rows="7" placeholder="1× the most valuable prize&#10;3× another valuable prize&#10;…&#10;5× the least valuable prize" required></textarea>
        </div>
        <div class="buttons">
            <button>Submit raffle</button>
        </div>
    </form>
</dialog>

<script>
    const exchangeRates = {{.ExchangeRates}}

    const dialogElement = element('dialog')
    const titleElement = element('title')
    const ticketPriceElement = element('ticket-price')
    const fiatAmountElement = element('fiat-amount')
    const fiatCurrencyElement = element('fiat-currency')
    const prizesElement = element('prizes')
    const addPrizeButton = element('add-prize')

    function openCreateDialog() {
        titleElement.value = ''
        ticketPriceElement.value = ''
        fiatAmountElement.value = ''
        fiatCurrencyElement.value = ''
        prizesElement.value = ''
        dialogElement.onsubmit = () => submitRaffle(post, '/api/raffles')
        dialogElement.showModal()
    }

    function openEditDialog(raffleId) {
        const raffleUri = `/api/raffles/${raffleId}`
        fetch(raffleUri)
            .then(response => response.json())
            .then(body => {
                titleElement.value = body.title
                ticketPriceElement.value = body.ticketPrice
                fiatCurrencyElement.value = body.fiatCurrency
                prizesElement.value = body.prizes.map(prizeToString).join('\n')
                dialogElement.onsubmit = () => submitRaffle(put, raffleUri)
                dialogElement.showModal()
                updateFiatAmount()
            })
    }

    function prizeToString({name = '', quantity = 1}) {
        return `${quantity}× ${name}`
    }

    function addPrize() {
        prizesElement.value += (prizesElement.value ? '\n' : '') + prizeToString({})
        prizesElement.focus()
    }

    function updateFiatAmount() {
        const exchangeRate = exchangeRates[fiatCurrencyElement.value]
        const fiatAmount = exchangeRate * ticketPriceElement.value
        fiatAmountElement.value = fiatAmount ? fiatAmount.toFixed(2) : ''
    }

    function submitRaffle(submitFunction, uri) {
        const prizes = stringToPrizes(prizesElement.value)
        if (!validatePrizes(prizes)) {
            return false
        }
        submitFunction(uri, {
            title: titleElement.value,
            ticketPrice: Number(ticketPriceElement.value),
            fiatCurrency: fiatCurrencyElement.value,
            prizes,
        }).then(reloadPage)
    }

    function stringToPrizes(value) {
        return value.split(/\s*\n\s*/).filter(line => line).map(line => {
            const [_, quantity, name] = line.match(/^(\d+)\s*×\s*(.*)$/) ?? []
            return {
                name: name,
                quantity: Number(quantity)
            }
        })
    }

    function validatePrizes(prizes) {
        if (prizes.some(({ quantity }) => !Number.isInteger(quantity))) {
            return alert('Invalid configuration of prizes!')
        }
        if (prizes.some(({ quantity }) => quantity < 1 || quantity > 10)) {
            return alert('Prize quantity must be between 1 and 10!')
        }
        if (prizes.some(({ name }) => name.length < 1 || name.length > 50)) {
            return alert('Prize name must be between 1 and 50 characters!')
        }
        if (prizes.length > 21) {
            return alert('At most 21 prizes may be configured!')
        }
        return true
    }

    function closeDialog() {
        dialogElement.close()
    }
</script>

</body>
</html>
